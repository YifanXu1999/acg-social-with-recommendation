buildscript {

    apply plugin: 'java'

    ext {
        springBootVersion = '3.3.5'
        consulDiscoveryVersion = '4.1.2'
        springCloudStarterVersion = '4.1.4'
        jwtVersion = '0.11.5'
        lombokVersion = '1.18.34'
        jsonwebtoken = '0.11.5'
        Oauth2ClientVersion ='6.3.4'
        swaggerVersion = '2.2.25'
        openApiVersion = '2.6.0'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    group = 'com.yifan'
    version = '0.0.1-SNAPSHOT'
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    dependencies {

    }

    dependencyManagement {
        dependencies {
            dependency "org.springframework.cloud:spring-cloud-dependencies:${springCloudStarterVersion}"
            dependency "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
            dependency "org.projectlombok:lombok:${lombokVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-consul-discovery:${consulDiscoveryVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-consul-config:${consulDiscoveryVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-config:${springCloudStarterVersion}"
            dependency "io.jsonwebtoken:jjwt-api:${jwtVersion}"      // Specify version if not managed by BOM
            dependency "io.jsonwebtoken:jjwt-impl:${jwtVersion}"     // Specify version if not managed by BOM
            dependency "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-bootstrap:${springCloudStarterVersion}"
            dependency "org.springframework.cloud:spring-cloud-gateway-server:${springCloudStarterVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-gateway:${springCloudStarterVersion}"
            dependency "org.springframework.security:spring-security-oauth2-client:${Oauth2ClientVersion}"
            dependency "io.swagger.core.v3:swagger-core:${swaggerVersion}"
            dependency "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"
        }

    }
}





project("headnews-gateways") {
    subprojects {
        dependencies {
            implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
            implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
            implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
            implementation project(":headnews-utils")
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.boot:spring-boot-starter-security'
            implementation 'org.springframework.security:spring-security-web'  // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-api'       // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-impl'      // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-jackson'
            implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
            implementation "org.springframework.cloud:spring-cloud-gateway-server"
            implementation "org.springframework.cloud:spring-cloud-starter-gateway"
            implementation "org.springframework.security:spring-security-oauth2-client"
        }
    }
}

project("headnews-services") {

    subprojects {
        dependencies {
            implementation project(":headnews-commons")
            implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
            implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
            implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
            implementation project(":headnews-utils")
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.boot:spring-boot-starter-web'
            implementation 'org.springframework.boot:spring-boot-starter-security'
            implementation 'org.springframework.security:spring-security-web'  // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-api'       // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-impl'      // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-jackson'
            implementation "org.springframework.cloud:spring-cloud-starter-bootstrap:${springCloudStarterVersion}"
        }
    }

}

project("headnews-commons") {
    bootJar {
        enabled = false
    }
    dependencies {
        implementation 'io.swagger.core.v3:swagger-core'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
        implementation 'org.springframework:spring-beans'
        implementation 'org.springframework:spring-context'
        implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    }
}


project("headnews-utils") {
    dependencies {
        implementation 'io.jsonwebtoken:jjwt-api'       // Specify version if not managed by BOM
        implementation 'io.jsonwebtoken:jjwt-impl'      // Specify version if not managed by BOM
        implementation 'io.jsonwebtoken:jjwt-jackson'
        implementation 'org.springframework:spring-beans'
        implementation 'org.springframework.security:spring-security-core'
    }
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}



tasks.named('test') {
    useJUnitPlatform()
}

