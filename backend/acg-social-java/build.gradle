buildscript {

    apply plugin: 'java'

    ext {
        springBootVersion = '3.3.5'
        consulDiscoveryVersion = '4.1.2'
        springCloudStarterVersion = '4.1.4'
        jwtVersion = '0.11.5'
        lombokVersion = '1.18.34'
        jsonwebtoken = '0.11.5'
        Oauth2ClientVersion ='6.3.4'
        swaggerVersion = '2.2.25'
        openApiVersion = '2.6.0'
        postgresqlVersion = '42.7.4'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    group = 'com.acgsocial'
    version = '0.0.1-SNAPSHOT'
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'
    }

    dependencyManagement {
        dependencies {
            dependency "org.springframework.cloud:spring-cloud-dependencies:${springCloudStarterVersion}"
            dependency "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
            dependency "org.projectlombok:lombok:${lombokVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-consul-discovery:${consulDiscoveryVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-consul-config:${consulDiscoveryVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-config:${springCloudStarterVersion}"
            dependency "io.jsonwebtoken:jjwt-api:${jwtVersion}"      // Specify version if not managed by BOM
            dependency "io.jsonwebtoken:jjwt-impl:${jwtVersion}"     // Specify version if not managed by BOM
            dependency "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-bootstrap:${springCloudStarterVersion}"
            dependency "org.springframework.cloud:spring-cloud-gateway-server:${springCloudStarterVersion}"
            dependency "org.springframework.cloud:spring-cloud-starter-gateway:${springCloudStarterVersion}"
            dependency "org.springframework.security:spring-security-oauth2-client:${Oauth2ClientVersion}"
            dependency "io.swagger.core.v3:swagger-core:${swaggerVersion}"
            dependency "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"
            dependency "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
            dependency "org.postgresql:postgresql:${postgresqlVersion}"
        }

    }
}



project("acg-social-models") {
    bootJar {
        enabled = false
    }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.postgresql:postgresql'
        implementation 'org.springframework.boot:spring-boot-autoconfigure'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.4.0'
    }
}

project("acg-social-gateways") {
    subprojects {
        dependencies {
            implementation project(":acg-social-utils")
            implementation project(":acg-social-commons")

            implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
            implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
            implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.boot:spring-boot-starter-security'
            implementation 'org.springframework.security:spring-security-web'  // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-api'       // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-impl'      // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-jackson'
            implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
            implementation "org.springframework.cloud:spring-cloud-gateway-server"
            implementation "org.springframework.cloud:spring-cloud-starter-gateway"
            implementation "org.springframework.security:spring-security-oauth2-client"
        }
    }
}

project("acg-social-services") {

    subprojects {
        dependencies {
            implementation project(":acg-social-commons")
            implementation project(":acg-social-utils")
            implementation project(":acg-social-models")

            implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
            implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
            implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.boot:spring-boot-starter-web'
            implementation 'io.jsonwebtoken:jjwt-api'       // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-impl'      // Specify version if not managed by BOM
            implementation 'io.jsonwebtoken:jjwt-jackson'
            implementation "org.springframework.cloud:spring-cloud-starter-bootstrap:${springCloudStarterVersion}"
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            implementation "io.swagger.core.v3:swagger-core"
            implementation group: 'org.apache.rocketmq', name: 'rocketmq-client', version: '5.3.1'
            implementation group: 'org.apache.rocketmq', name: 'rocketmq-spring-boot-starter', version: '2.3.1'
            implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
            implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'
            implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
        }
    }

}

project(":acg-social-services:acg-social-user-service") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.security:spring-security-web'  // Specify version if not managed by BOM
        // https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-client
        implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '6.3.1'


    }
}



project(":acg-social-services:acg-social-post-service") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.security:spring-security-web'  // Specify version if not managed by BOM
    }
}

project(":acg-social-bff:acg-social-auth-server") {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
        implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'io.jsonwebtoken:jjwt-api'       // Specify version if not managed by BOM
        implementation 'io.jsonwebtoken:jjwt-impl'      // Specify version if not managed by BOM
        implementation 'io.jsonwebtoken:jjwt-jackson'
        implementation "org.springframework.cloud:spring-cloud-starter-bootstrap:${springCloudStarterVersion}"
        implementation "io.swagger.core.v3:swagger-core"
        implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server', version: '3.3.0'
        testCompileOnly('org.springframework.boot:spring-boot-starter-test')
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.11.2'


    }
}

project("acg-social-bff") {
    bootJar {
        enabled = false
    }
}
project("acg-social-commons") {
    bootJar {
        enabled = false
    }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux:3.3.4'
        implementation 'io.swagger.core.v3:swagger-core'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
        implementation 'org.springframework:spring-beans'
        implementation 'org.springframework:spring-context'
        implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
        implementation 'org.springframework.security:spring-security-core'
        implementation 'org.springframework:spring-webmvc:6.1.14'
        compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
        implementation 'org.springframework.security:spring-security-web'
    }
}


project("acg-social-utils") {
    dependencies {
        implementation 'io.jsonwebtoken:jjwt-api'       // Specify version if not managed by BOM
        implementation 'io.jsonwebtoken:jjwt-impl'      // Specify version if not managed by BOM
        implementation 'io.jsonwebtoken:jjwt-jackson'
        implementation 'org.springframework:spring-beans'
        implementation 'org.springframework.security:spring-security-core'
        implementation 'org.springframework.boot:spring-boot-autoconfigure'
        implementation group: 'io.minio', name: 'minio', version: '8.5.13'
        implementation group: 'org.springframework', name: 'spring-web', version: '6.2.0'
    }
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}



tasks.named('test') {
    useJUnitPlatform()
    include '**'
}

